package wang.raye.springboot.model.mapper;

import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;
import wang.raye.springboot.model.PairsNew;
import wang.raye.springboot.model.PairsNewCriteria;

public interface PairsNewMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pairs_new
     *
     * @mbg.generated
     */
    @SelectProvider(type=PairsNewSqlProvider.class, method="countByExample")
    long countByExample(PairsNewCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pairs_new
     *
     * @mbg.generated
     */
    @DeleteProvider(type=PairsNewSqlProvider.class, method="deleteByExample")
    int deleteByExample(PairsNewCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pairs_new
     *
     * @mbg.generated
     */
    @Delete({
        "delete from pairs_new",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pairs_new
     *
     * @mbg.generated
     */
    @Insert({
        "insert into pairs_new (id, market, ",
        "symbol, symbol_id, ",
        "currency, coin_info, ",
        "coin_url, charge_at, ",
        "withdraw_at, end_at, ",
        "trade_at, price, ",
        "change1d)",
        "values (#{id,jdbcType=INTEGER}, #{market,jdbcType=VARCHAR}, ",
        "#{symbol,jdbcType=VARCHAR}, #{symbolId,jdbcType=VARCHAR}, ",
        "#{currency,jdbcType=VARCHAR}, #{coinInfo,jdbcType=VARCHAR}, ",
        "#{coinUrl,jdbcType=VARCHAR}, #{chargeAt,jdbcType=VARCHAR}, ",
        "#{withdrawAt,jdbcType=VARCHAR}, #{endAt,jdbcType=VARCHAR}, ",
        "#{tradeAt,jdbcType=VARCHAR}, #{price,jdbcType=VARCHAR}, ",
        "#{change1d,jdbcType=VARCHAR})"
    })
    int insert(PairsNew record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pairs_new
     *
     * @mbg.generated
     */
    @InsertProvider(type=PairsNewSqlProvider.class, method="insertSelective")
    int insertSelective(PairsNew record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pairs_new
     *
     * @mbg.generated
     */
    @SelectProvider(type=PairsNewSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="market", property="market", jdbcType=JdbcType.VARCHAR),
        @Result(column="symbol", property="symbol", jdbcType=JdbcType.VARCHAR),
        @Result(column="symbol_id", property="symbolId", jdbcType=JdbcType.VARCHAR),
        @Result(column="currency", property="currency", jdbcType=JdbcType.VARCHAR),
        @Result(column="coin_info", property="coinInfo", jdbcType=JdbcType.VARCHAR),
        @Result(column="coin_url", property="coinUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="charge_at", property="chargeAt", jdbcType=JdbcType.VARCHAR),
        @Result(column="withdraw_at", property="withdrawAt", jdbcType=JdbcType.VARCHAR),
        @Result(column="end_at", property="endAt", jdbcType=JdbcType.VARCHAR),
        @Result(column="trade_at", property="tradeAt", jdbcType=JdbcType.VARCHAR),
        @Result(column="price", property="price", jdbcType=JdbcType.VARCHAR),
        @Result(column="change1d", property="change1d", jdbcType=JdbcType.VARCHAR)
    })
    List<PairsNew> selectByExample(PairsNewCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pairs_new
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, market, symbol, symbol_id, currency, coin_info, coin_url, charge_at, withdraw_at, ",
        "end_at, trade_at, price, change1d",
        "from pairs_new",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="market", property="market", jdbcType=JdbcType.VARCHAR),
        @Result(column="symbol", property="symbol", jdbcType=JdbcType.VARCHAR),
        @Result(column="symbol_id", property="symbolId", jdbcType=JdbcType.VARCHAR),
        @Result(column="currency", property="currency", jdbcType=JdbcType.VARCHAR),
        @Result(column="coin_info", property="coinInfo", jdbcType=JdbcType.VARCHAR),
        @Result(column="coin_url", property="coinUrl", jdbcType=JdbcType.VARCHAR),
        @Result(column="charge_at", property="chargeAt", jdbcType=JdbcType.VARCHAR),
        @Result(column="withdraw_at", property="withdrawAt", jdbcType=JdbcType.VARCHAR),
        @Result(column="end_at", property="endAt", jdbcType=JdbcType.VARCHAR),
        @Result(column="trade_at", property="tradeAt", jdbcType=JdbcType.VARCHAR),
        @Result(column="price", property="price", jdbcType=JdbcType.VARCHAR),
        @Result(column="change1d", property="change1d", jdbcType=JdbcType.VARCHAR)
    })
    PairsNew selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pairs_new
     *
     * @mbg.generated
     */
    @UpdateProvider(type=PairsNewSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") PairsNew record, @Param("example") PairsNewCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pairs_new
     *
     * @mbg.generated
     */
    @UpdateProvider(type=PairsNewSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") PairsNew record, @Param("example") PairsNewCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pairs_new
     *
     * @mbg.generated
     */
    @UpdateProvider(type=PairsNewSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(PairsNew record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pairs_new
     *
     * @mbg.generated
     */
    @Update({
        "update pairs_new",
        "set market = #{market,jdbcType=VARCHAR},",
          "symbol = #{symbol,jdbcType=VARCHAR},",
          "symbol_id = #{symbolId,jdbcType=VARCHAR},",
          "currency = #{currency,jdbcType=VARCHAR},",
          "coin_info = #{coinInfo,jdbcType=VARCHAR},",
          "coin_url = #{coinUrl,jdbcType=VARCHAR},",
          "charge_at = #{chargeAt,jdbcType=VARCHAR},",
          "withdraw_at = #{withdrawAt,jdbcType=VARCHAR},",
          "end_at = #{endAt,jdbcType=VARCHAR},",
          "trade_at = #{tradeAt,jdbcType=VARCHAR},",
          "price = #{price,jdbcType=VARCHAR},",
          "change1d = #{change1d,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(PairsNew record);
}