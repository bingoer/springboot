package wang.raye.springboot.model.mapper;

import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;
import wang.raye.springboot.model.Pairs;
import wang.raye.springboot.model.PairsCriteria;

public interface PairsMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pairs
     *
     * @mbg.generated
     */
    @SelectProvider(type=PairsSqlProvider.class, method="countByExample")
    long countByExample(PairsCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pairs
     *
     * @mbg.generated
     */
    @DeleteProvider(type=PairsSqlProvider.class, method="deleteByExample")
    int deleteByExample(PairsCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pairs
     *
     * @mbg.generated
     */
    @Delete({
        "delete from pairs",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pairs
     *
     * @mbg.generated
     */
    @Insert({
        "insert into pairs (id, market, ",
        "market_alias, symbol, ",
        "symbol_alias, currency, ",
        "status, has_kilne, listAt, ",
        "tradedAt)",
        "values (#{id,jdbcType=INTEGER}, #{market,jdbcType=VARCHAR}, ",
        "#{marketAlias,jdbcType=VARCHAR}, #{symbol,jdbcType=VARCHAR}, ",
        "#{symbolAlias,jdbcType=VARCHAR}, #{currency,jdbcType=VARCHAR}, ",
        "#{status,jdbcType=VARCHAR}, #{hasKilne,jdbcType=CHAR}, #{listat,jdbcType=VARCHAR}, ",
        "#{tradedat,jdbcType=VARCHAR})"
    })
    int insert(Pairs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pairs
     *
     * @mbg.generated
     */
    @InsertProvider(type=PairsSqlProvider.class, method="insertSelective")
    int insertSelective(Pairs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pairs
     *
     * @mbg.generated
     */
    @SelectProvider(type=PairsSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="market", property="market", jdbcType=JdbcType.VARCHAR),
        @Result(column="market_alias", property="marketAlias", jdbcType=JdbcType.VARCHAR),
        @Result(column="symbol", property="symbol", jdbcType=JdbcType.VARCHAR),
        @Result(column="symbol_alias", property="symbolAlias", jdbcType=JdbcType.VARCHAR),
        @Result(column="currency", property="currency", jdbcType=JdbcType.VARCHAR),
        @Result(column="status", property="status", jdbcType=JdbcType.VARCHAR),
        @Result(column="has_kilne", property="hasKilne", jdbcType=JdbcType.CHAR),
        @Result(column="listAt", property="listat", jdbcType=JdbcType.VARCHAR),
        @Result(column="tradedAt", property="tradedat", jdbcType=JdbcType.VARCHAR)
    })
    List<Pairs> selectByExample(PairsCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pairs
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, market, market_alias, symbol, symbol_alias, currency, status, has_kilne, ",
        "listAt, tradedAt",
        "from pairs",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="market", property="market", jdbcType=JdbcType.VARCHAR),
        @Result(column="market_alias", property="marketAlias", jdbcType=JdbcType.VARCHAR),
        @Result(column="symbol", property="symbol", jdbcType=JdbcType.VARCHAR),
        @Result(column="symbol_alias", property="symbolAlias", jdbcType=JdbcType.VARCHAR),
        @Result(column="currency", property="currency", jdbcType=JdbcType.VARCHAR),
        @Result(column="status", property="status", jdbcType=JdbcType.VARCHAR),
        @Result(column="has_kilne", property="hasKilne", jdbcType=JdbcType.CHAR),
        @Result(column="listAt", property="listat", jdbcType=JdbcType.VARCHAR),
        @Result(column="tradedAt", property="tradedat", jdbcType=JdbcType.VARCHAR)
    })
    Pairs selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pairs
     *
     * @mbg.generated
     */
    @UpdateProvider(type=PairsSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") Pairs record, @Param("example") PairsCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pairs
     *
     * @mbg.generated
     */
    @UpdateProvider(type=PairsSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") Pairs record, @Param("example") PairsCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pairs
     *
     * @mbg.generated
     */
    @UpdateProvider(type=PairsSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Pairs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table pairs
     *
     * @mbg.generated
     */
    @Update({
        "update pairs",
        "set market = #{market,jdbcType=VARCHAR},",
          "market_alias = #{marketAlias,jdbcType=VARCHAR},",
          "symbol = #{symbol,jdbcType=VARCHAR},",
          "symbol_alias = #{symbolAlias,jdbcType=VARCHAR},",
          "currency = #{currency,jdbcType=VARCHAR},",
          "status = #{status,jdbcType=VARCHAR},",
          "has_kilne = #{hasKilne,jdbcType=CHAR},",
          "listAt = #{listat,jdbcType=VARCHAR},",
          "tradedAt = #{tradedat,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Pairs record);
}